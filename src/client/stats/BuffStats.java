/*
 * ArcStory Project
 * √÷¡÷ø¯ sch2307@naver.com
 * ¿Ã¡ÿ junny_adm@naver.com
 * øÏ¡ˆ»∆ raccoonfox69@gmail.com
 * ∞≠¡§±‘ ku3135@nate.com
 * ±Ë¡¯»´ designer@inerve.kr
 */

package client.stats;

import constants.GameConstants;


public enum BuffStats implements GlobalBuffStat{
    
    DISEASE_TOLERANCE   (0x1L, -1),
    STATUS_RESIST2      (0x2L, -1),
    MAX_DAMAGE          (0x4L, -1),
    NOVA_WARRIER        (0x8L, -1),
    TREAM               (0x10L, -1),
    PERCENT_DAMAGE_BUFF (0x20L, -1),
    PIRATES_REVENGE     (0x20L, -1),
    MANA_REFLECTION     (0x40L, -1),
    DRAGON_ROAR         (0x80L, -1),
    HAMSTRING           (0x800L, -1),
    BLIND               (0x1000L, -1),
    BUFF_MASTERY        (0x2000L, -1),
    BOOSTER_R           (0x10000L, -1),
    WATER_SHIELD        (0x10000L, -1), 
    RUNE_EXPRATE        (0x20000L, -1),
    GHOST_MORPH         (0x20000L, -1),
    ARIANT_COSS_IMU     (0x40000L, -1), 
    REVERSE_DIR         (0x80000L, -1),
    STACK_ALLSTAT       (0x80000L, -1),
    STACK_SPEED         (0x100000L, -1),
    STACK_JUMP          (0x200000L, -1),
    STACK_AVOID         (0x400000L, -1),
    STACK_ACC           (0x800000L, -1),
    SPIRIT_CLAW         (0x800000L, -1),
    EXTEND_MANA         (0x1000000L, -1),
    MAXMP_PHANTOM_R     (0x1000000L, -1),
    STACK_MP            (0x2000000L, -1),
    MAXHP_PHANTOM_R     (0x4000000L, -1),
    STACK_HP            (0x8000000L, -1),
    BERSERK_FURY        (0x8000000L, -1),
    DIVINE_BODY         (0x10000000L, -1),
    STACK_MDEF          (0x10000000L, -1),
    FINAL_ATTACK        (0x20000000L, -1),
    STACK_WDEF          (0x20000000L, -1),
    STACK_MATK          (0x40000000L, -1), 
    STACK_WATK          (0x80000000L, -1),
    SOULARROW           (0x200000000L, -1),
    INVINCIBLE          (0x400000000L, -1),
    MAGIC_GUARD_DAMAGER (0x400000000L, -1),
    MAXHP               (0x800000000L, -1),
    ACC                 (0x1000000000L, -1),
    MAXMP               (0x1000000000L, -1),
    POWERGUARD          (0x2000000000L, -1),
    BOOSTER             (0x4000000000L, -1),
    HANDS               (0x4000000000L, -1),
    DARKSIGHT           (0x8000000000L, -1),
    MAGIC_GUARD         (0x10000000000L, -1),
    JUMP                (0x20000000000L, -1),
    BIGORA              (0x20000000000L, -1),
    SPEED               (0x40000000000L, -1),
    AVOID               (0x100000000000L, -1),
    WDEF                (0x400000000000L, -1),
    MATK                (0x800000000000L, -1),
    MDEF                (0x1000000000000L, -1),
    WATK                (0x2000000000000L, -1),
    STUN                (0x2000000000000L, -1),
    POISON              (0x4000000000000L, -1),
    SEAL                (0x8000000000000L, -1),
    DARKNESS            (0x10000000000000L, -1),    
    SUMMON              (0x20000000000000L, -1),
    DRAGONBLOOD         (0x80000000000000L, -1),
    MESOUP              (0x200000000000000L, -1),
    MOB_PDPR            (0x200000000000000L, -1),
    PUPPET              (0x800000000000000L, -1), 
    BOSS_DAMAGE         (0x1000000000000000L, -1),
    PHANTOM_JUDGEMENT   (0x4000000000000000L, -1),
    PARASHOCK_DAM_CR    (0x4000000000000000L, -1),
    CR_PERCENT          (0x8000000000000000L, -1),
    
    
    ECHO_OF_HERO        (0x8L, 0),
    S_SOULARROW         (0x20L, 0),
    ILLUSION_STEP_EVA   (0x80L, 0),
    TIME_INTENSIVE      (0x80L, 0),
    WIND_BLESS          (0x80L, 0),
    ADVANCED_BLESSING   (0x100L, 0),
    INFINITY            (0x200L, 0),
    SHARP_EYES          (0x2000L, 0),
    STANCE              (0x4000L, 0),
    IRON_ROTUS          (0x4000L, 0),
    INFINITY_STANCE     (0x4000L, 0),
    MAPLE_WARRIOR       (0x8000L, 0),
    MORPH               (0x20000L, 0),
    MESOGUARD           (0x400000L, 0),
    PICKPOCKET          (0x800000L, 0),
    SHADOWPARTNER       (0x1000000L, 0),
    HOLY_SYMBOL         (0x4000000L, 0),
    WK_CHARGE           (0x8000000L, 0),
    COMBO               (0x10000000L, 0),
    ENRAGE              (0x100000000L, 0),
    SOUL_STONE          (0x1000000000L, 0),
    MAGIC_RESISTANCE    (0x2000000000L, 0),
    MAGIC_SHILED        (0x4000000000L, 0),
    PARTY_DAMAGE        (0x4000000000L, 0),
    MECHANIC_CAMOUFLAGE (0x8000000000L, 0),
    ITEM_EXPRATE        (0x80000000000L, 0),
    ITEM_EFFECT         (0x100000000000L, 0),
    KNOCKBACK_DECREASE  (0x200000000000L, 0), 
    BODY_PRESSURE       (0x400000000000L, 0),
    COMBO_BARRIER       (0x800000000000L, 0),
    COMBO_DRAIN         (0x1000000000000L, 0),
    ARAN_COMBO          (0x2000000000000L, 0),
    ELEMENT_RESET       (0x10000000000000L, 0),
        
    VIPER_COMPOS        (0x1L, 1),
    DAMAGE_R_PHANTOM    (0x1L, 1),
    BLESSING_ARMOR      (0x2L, 1),
    ROLL_OF_DICE        (0x4L, 1),
    BISTFORM_HP         (0x8L, 1),
    SUPERBODY           (0x10L, 1),
    ANTI_MAGICSHELL     (0x10L, 1),
    YELLOW_AURA         (0x20L, 1),
    BLUE_AURA           (0x40L, 1),
    DARK_AURA           (0x80L, 1),
    MECH_CHANGE         (0x100L, 1),
    HOWLING_DMG_DEC     (0x1000L, 1),
    HOWLING_AVOID       (0x2000L, 1),
    HOWLING_MAXMP       (0x4000L, 1),
    HOWLING_CRITICAL    (0x8000L, 1),
    SOUL_GAZE           (0x20000L, 1),
    PERFECT_ARMOR       (0x80000L, 1),
    ENHANCED_MDEF       (0x100000L, 1),
    ENHANCED_WDEF       (0x200000L, 1),
    ENHANCED_MATK       (0x400000L, 1),
    ENHANCED_WATK       (0x800000L, 1),
    ENHANCED_MAXHP      (0x2000000L, 1),
    DEMON_EX_BUFF       (0x4000000L, 1),
    BISTFORM_DAMAGE     (0x8000000L, 1),
    HOWLING_PARTY       (0x10000000L, 1),
    POTIC_METITATION    (0x40000000L, 1),
    FRIZING_BRESS       (0x40000000L, 1),
    IGNORE_BUFFNON      (0x40000000L, 1),
    EXCEED_CANCEL       (0x44000000L, 1),
    DRAWBACK            (0x80000000L, 1),
    INFINITY_FORCE      (0x100000000L, 1),
    DEX_UP              (0x400000000000L, 1),
    MONKEY_MAGIC        (0x1000000000000L, 1),
    SKILL_COUNT         (0x4000000000000L, 1),
    BLESS               (0x80000000000000L, 1),
    AFFINITY            (0x100000000000000L, 1),
    ONYX_WILL           (0x200000000000000L, 1),
    INFLATION           (0x800000000000000L, 1),    
    BEHOLDER            (0x2000000000000000L, 1),
    COMBAT_ORDERS       (0x4000000000000000L, 1),
    TELEPORT_MASTERY    (0x8000000000000000L, 1),
    
    
    
    MASTER_MAGIC        (0x8L, 2),
    LIGHT_SHADOW_GUARD  (0x60L, 2),
    DEFENCE_R           (0x100L, 2),
    SOUL_ENDURE         (0x100L, 2),
    SPIRIT_LINK         (0x200L, 2), 
    VAMPIRIC_TOUCH      (0x200L, 2),
    SAINT_SAVER         (0x1000L, 2),
    CRIT_INC            (0x20000L, 2),
    DMG_INC             (0x100000L, 2),
    OAK_ROULETTE        (0x200000L, 2),
    DARK_SPECULATION    (0x400000L, 2),
    DAMAGE_RESIST       (0x800000L, 2),
    ELEMENT_RESIST      (0x1000000L, 2),
    STATUS_RESIST       (0x2000000L, 2),
    ARCANE_AIM          (0x8000000L, 2),
    SKILL_FULLCHARGE    (0x10000000L, 2),
    HOLY_SHELL          (0x20000000L, 2),
    RESHUFFLE_MODE      (0x400000000L, 2),
    ROBURST_ARMOR       (0x800000000L, 2),
    STR_UP              (0x1000000000L, 2),
    MORPH_GAUGE         (0x1000000000L, 2),
    LIFE_TIDAL          (0x4000000000L, 2),
    LUMINOUS            (0x4000000000L, 2),
    TIME                (0x8000000000L, 2),
    BLESS_OF_DARKNESS   (0x10000000000L, 2),
    DARK_CRESSENDOR     (0x20000000000L, 2),
    LUMINOUS_GAUGE      (0x40000000000L, 2),
    VOYD_PRESSURE       (0x80000000000L, 2),
    BLESSING_ARMOR_WATK (0x100000000000L, 2),
    TIME_REWIND         (0x400000000000L, 2),
    MIN_CRITICAL_DAMAGE (0x8000000000000L, 2),
    CRITICAL_RATE       (0x10000000000000L, 2),
    PHANTOM_SHROUD      (0x20000000000000L, 2),
    LUCK_PHANTOM_THIEF  (0x40000000000000L, 2),
    DP_PHANTOM          (0x80000000000000L, 2),
    IGNORE_DEFENCE_R    (0x80000000000000L, 2),
    DUMMY_EFFECT        (0x80000000000000L, 2),
    SPIRIT              (0x80000000000000L, 2),
    SUCCESS             (0x100000000000000L, 2),
    HOMING_BEACON       (0x200000000000000L, 2),
    KILLING_POINT       (0x400000000000000L, 2),    
    
    
            
    CYCLONE             (0x8L, 3),
    ASURA               (0x10L, 3), 
    SWALLOW_CRITICALUP  (0x10L, 3),
    SWALLOW_MPMAX       (0x20L, 3),
    SWALLOW_DAMAGE_CARE (0x40L, 3),
    BLEEDING_TOXIN      (0x40L, 3),
    SWALLOW_AVOID       (0x80L, 3),
    FLIP_THE_COIN       (0x100L, 3),
    CONVERSION          (0x100L, 3),
    RIVIBE              (0x200L, 3),
    H_CRITICAL_RAGE     (0x200L, 3),
    RESISTANCE_HIDE     (0x400L, 3),
    HEAVENS_DOOR        (0x800L, 3),
    ANGELRAY_COUNT      (0x1000L, 3),
    AURA                (0x1000L, 3),
    FIRE_AURA           (0x2000L, 3), 
    PARTY_STANCE        (0x4000L, 3),
    FINAL_JUDGEMENT     (0x8000L, 3),
    SAFETY              (0x20000L, 3),
    SAFETY2             (0x40000L, 3),
    IGNORE_ATTACKNON    (0x80000L, 3),
    FINAL_CUT           (0x80000L, 3),
    RECHARGE            (0x100000L, 3),
    COMBO_UNLIMTIED     (0x200000L, 3),
    REVERSE_DAMAGE      (0x10000000L, 3),
    POWER_TRANSFER      (0x10000000L, 3),
    S_SHARP_EYES        (0x40000000L, 3),
    WILL_OF_SWORD       (0x80000000L, 3),
    WIND_WALK           (0x100000000L, 3),
    SOLUNA_TIME         (0x200000000L, 3),
    SOUL                (0x400000000L, 3),
    PERCENT_ACC         (0x800000000L, 3),
    DMG_DEC             (0x1000000000L, 3),
    PLAYER_OPACITY      (0x2000000000L, 3),
    ALBATROSS           (0x4000000000L, 3),
    ADD_ACC             (0x8000000000L, 3),
    ADD_AVOID           (0x10000000000L, 3),
    STORM_BRINGER       (0x20000000000L, 3),
    EXPRATE             (0x40000000000L, 3),
    NON_DEF             (0x100000000000L, 3),
    LIGHTNING           (0x200000000000L, 3),
    HYPER               (0x800000000000L, 3),
    EVIETION_REVERTY    (0x1000000000000L, 3),
    SOARING             (0x1000000000000L, 3),
    LIGHTNING_CHARGE    (0x4000000000000L, 3),
    SURPLUS             (0x8000000000000L, 3),
    ATTACK_COUNT        (0x40000000000000L, 3),
    EXEED               (0x80000000000000L, 3),
    DAMAGE_BUFF         (0x80000000000000L, 3),
    MINE                (0x200000000000000L, 3),
    DIABOLIC_RECOVERY   (0x400000000000000L, 3),
    EXEEDATTACK         (0x800000000000000L, 3),
    ENHANCED_MAXMP      (0x800000000000000L, 3),
    BOSS_ATTACK         (0x2000000000000000L, 3),
    
   
    DAMAGE_R_ZERO       (0x8L, 4),
    CRITICAL_R_ZERO     (0x10L, 4),
    CONSENTRATION       (0x20L, 4),
    CRITICAL_GROWING    (0x80L, 4),
    DIVINE_SWIFT        (0x100L, 4),
    DIVINE_FORCE        (0x200L, 4),
    IMMUNITY_BARRIER    (0x800L, 4),
    ADVANCED_QUIVER     (0x4000L, 4), 
    QUIVER_KARTRIGE     (0x8000L, 4),
    EXTREAM_ARCH        (0x20000L, 4),
    STEP                (0x200000L, 4),
    PARASHOCK_DF_POWER  (0x400000L, 4),
    REIN_CANATION       (0x800000L, 4),
    CROSS               (0x2000000L, 4),
    LISTONATION         (0x4000000L, 4),
    ELEMENTAL_CHARGE    (0x8000000L, 4), 
    SOUL_WEAPON_HEAD    (0x20000000L, 4),
    SOUL_WEAPON         (0x40000000L, 4),
    SPEED_INFUSION      (0x800000000L, 4),
    MONSTER_RIDING      (0x1000000000L, 4),
    DASH_JUMP           (0x2000000000L, 4),
    DASH_SPEED          (0x4000000000L, 4),
    ENERGY_CHARGE       (0x8000000000L, 4),
    
    SHADOW_SERVANT      (0x80000000000L, 4),
    BARRIER             (0x100000000000L, 4),
    IGNITION            (0x2000000000000L, 4),
    PHOENIX             (0x4000000000000L, 4),
    ELEMENT_DARKNESS    (0x40000000000000L, 4),
    ESCAPE              (0x800000000000000L, 4),
    SOHON               (0x1000000000000000L, 4),
    HP_RECOVERY         (0x2000000000000000L, 4),
    
    GIVE_DASH           (DASH_SPEED.getValue() | DASH_JUMP.getValue(), 4)
    ;
    
    private final long buffstat;
    private final byte index;

    private BuffStats(long buffstat) {
	this.buffstat = buffstat;
	this.index = -1;
    }

    private BuffStats(long buffstat, int index) {
	this.buffstat = buffstat;
	this.index = (byte) index;
    }
    
    private BuffStats(long buffstat, boolean first) {
	this.buffstat = buffstat;
	this.index = first ? (byte) 3 : (byte) 4;
    }

    @Override
    public final int getIndex() {
	return index;
    }

    @Override
    public final long getValue() {
	return buffstat;
    }
}